[tool.poetry]
name = "facilitate"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
matplotlib = "^3.8.2"
scikit-learn = "^1.3.2"
seaborn = "^0.13.0"
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
mypy = "^1.7.0"
pytest = "^7.4.3"
pep8-naming = "^0.13.3"
flake8-import-order = "^0.18.2"
flake8-comprehensions = "^3.14.0"
flake8-bugbear = "^23.9.16"
flake8-future-annotations = "^1.1.0"
flake8-quotes = "^3.3.2"
pytest-cov = "^4.1.0"
ruff = "^0.1.6"
nox = "^2023.4.22"

[tool.mypy]
ignore_missing_imports = false
strict = true

[tool.ruff]
line-length = 120
target-version = "py312"
src = ["src"]
select = [
    "ALL",  # includes all rules (including new ones)
]
extend-ignore = [
    "ANN101",   # missing type annotation for 'self' in method
    "ANN102",   # missing type annotation for 'cls' in classmethod
    "B024",     # use of abstract base class without abstract methods
    "D100",     # missing docstring in public module
    "D101",     # missing docstring in public class
    "D102",     # missing docstring in public method
    "D103",     # missing docstring in public function
    "D104",     # missing docstring in public package
    "D203",     # one-blank-line-before-class
    "D213",     # multi-line-summary-second-line
    "FIX001",   # unresolved FIXME
    "FIX002",   # TODO found
    "TD001",    # invalid TODO tag: `FIXME`
    "TD002",    # missing author in TODO
    "TD003",    # missing issue link on line following TODO
    "TD004",    # missing colon in TODO
    "TRY003",   # avoid specifying long messages outside the exception class
    "S101",     # use of assertions
    "T201",     # use of print
    "D204",     # 1 blank line required after class docstring
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
